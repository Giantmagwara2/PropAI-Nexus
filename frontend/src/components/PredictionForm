import React, { useState } from 'react';
import usePrediction from '../hooks/usePrediction';
import Loader from './Loader';
import { notifySuccess, notifyError } from '../utils/toast';

export default function PredictionForm() {
  const { data, loading, error, fetchPrediction } = usePrediction('/api/predictions/property');
  const [formData, setFormData] = useState({
    size: 0,
    bedrooms: 0,
    bathrooms: 0,
    location: '',
    age: 0,
    country: 'US',
    currency: 'USD',
  });

  const handlePredict = async () => {
    try {
      await fetchPrediction(formData);
      notifySuccess('Prediction successful');
    } catch (err) {
      notifyError('Prediction failed');
    }
  };

  return (
    <div>
      <div>
        <label>Size:</label>
        <input
          type="number"
          value={formData.size}
          onChange={(e) => setFormData({ ...formData, size: e.target.value })}
        />
      </div>
      <div>
        <label>Bedrooms:</label>
        <input
          type="number"
          value={formData.bedrooms}
          onChange={(e) => setFormData({ ...formData, bedrooms: e.target.value })}
        />
      </div>
      <div>
        <label>Bathrooms:</label>
        <input
          type="number"
          value={formData.bathrooms}
          onChange={(e) => setFormData({ ...formData, bathrooms: e.target.value })}
        />
      </div>
      <div>
        <label>Location:</label>
        <input
          type="text"
          value={formData.location}
          onChange={(e) => setFormData({ ...formData, location: e.target.value })}
        />
      </div>
      <div>
        <label>Age of Property:</label>
        <input
          type="number"
          value={formData.age}
          onChange={(e) => setFormData({ ...formData, age: e.target.value })}
        />
      </div>
      <div>
        <label>Country:</label>
        <input
          type="text"
          value={formData.country}
          onChange={(e) => setFormData({ ...formData, country: e.target.value })}
        />
      </div>
      <div>
        <label>Currency:</label>
        <input
          type="text"
          value={formData.currency}
          onChange={(e) => setFormData({ ...formData, currency: e.target.value })}
        />
      </div>
      <button onClick={handlePredict} disabled={loading}>
        {loading ? 'Predictingâ€¦' : 'Predict'}
      </button>
      {loading && <Loader />}
      {error && notifyError(error)}
    </div>
  );
}
